name: Tests
on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'release-*'
    paths-ignore:
      - '**/*.md'
      - '.github/**/*.yaml'
      - '.github/**/*.yml'
  pull_request:
    branches:
      - 'master'
      - 'main'
    paths-ignore:
      - '**/*.md'
      - '.github/**/*.yaml'
      - '.github/**/*.yml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.10'

      - name: Lint with ruff
        run: |
          python -m pip install ruff

          # stop the build if there are Python syntax errors or undefined names
          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          ruff --format=github --target-version=py37 .
        continue-on-error: true

  pytest:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: ${{ matrix.python-version }}

      - name: Test with pytest
        run: |
          python --version
          python -m pip install poetry && \
          python -m poetry install --with test

          make test

  e2e_tests:
    name: End-to-end Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: ${{ matrix.python-version }}

      - name: Add hosts to /etc/hosts
        run: |
          echo 'Adding hosts to /etc/hosts'
          sudo echo "127.0.0.1 http.badssl.com" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 example.com" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 my-httpbin.com" | sudo tee -a /etc/hosts
          sudo echo "127.0.0.1 assets" | sudo tee -a /etc/hosts

      - name: Build image
        run: |
          # e.g. stoobly/agent:1.3
          docker build -t stoobly/agent:$(grep -oP "VERSION\s*=\s*'\K[0-9]+\.[0-9]+" stoobly_agent/__init__.py) .

          docker images
          sleep 3

      - name: Test with pytest
        run: |
          python --version
          python -m pip install poetry && \
          python -m poetry install --with test

          STOOBLY_IMAGE_USE_LOCAL=1 make test/e2e
