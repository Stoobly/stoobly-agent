name: Publish artifacts
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      skip_publish_pypi:
        description: 'Skip publishing to PyPI'
        required: false
        type: boolean
        default: false
      skip_publish_docker_hub:
        description: 'Skip publishing to Docker Hub'
        required: false
        type: boolean
        default: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Download stoobly-dashboard from GCP bucket
        env:
          STOOBLY_DASHBOARD_FILE: "dashboard.agent-alpha-1.4.0.tar.gz"
        run: |
          echo "Checking if file exists..."
          gcloud storage ls gs://stoobly-dashboard/${{ env.STOOBLY_DASHBOARD_FILE }}

          mkdir stoobly_agent/public/
          cd stoobly_agent/public/

          gcloud storage cp gs://stoobly-dashboard/${{ env.STOOBLY_DASHBOARD_FILE }} .

          echo "Extracting tar file..."
          tar xvf ${{ env.STOOBLY_DASHBOARD_FILE }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.10'

      - name: Push to Pypi
        if: ${{ !inputs.skip_publish_pypi }}
        run: |
          python -m pip install poetry
          make clean
          poetry build
          poetry publish --username "${{ secrets.PYPI_USERNAME }}" --password "${{ secrets.PYPI_PASSWORD }}"

      - name: Add release version to env vars
        run: |
          export RELEASE_VERSION=${GITHUB_REF#refs/*/}
          echo "Version: ${RELEASE_VERSION}"
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "SHORT_RELEASE_VERSION=${RELEASE_VERSION%.*}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: ${{ !inputs.skip_publish_docker_hub }}
        with:
          platforms: linux/amd64,linux/arm64

      - name: Build Docker image and push
        if: ${{ !inputs.skip_publish_docker_hub }}
        run: |
          # Debug
          # docker buildx ls

          docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" \
            --password "${{ secrets.DOCKER_HUB_TOKEN }}"

          docker buildx build \
            --push \
            --platform "linux/amd64,linux/arm64" \
            --tag "stoobly/agent:${{ env.RELEASE_VERSION }}" \
            --tag "stoobly/agent:${{ env.SHORT_RELEASE_VERSION }}" \
            --tag "stoobly/agent:${GITHUB_SHA}" \
            --tag "stoobly/agent:alpha" \
            --tag "stoobly/agent" .

